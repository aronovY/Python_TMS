Строки: https://pythonworld.ru/tipy-dannyx-v-python/stroki-literaly-strok.html
Регулярные выражения: https://python-scripts.com/import-re-regular-expression
Регэксп: https://regex101.com/
# 1: Написать функцию, которая возвращает первое слово из строки используя методы строки и отдельно регулярные выражения.
# 2: Написать функцию, которая возвращает первые три символа из каждого слова, если в слове меньше, чем три символа, оставшееся место стоит заполнить пробелами. Дополнительно сделать тоже самое при помощи регулярных выражений.
# 3: Написать функцию, которая находит выводит в качестве результата список всех доменов при помощи методов строк. Дополнительно сделать это при помощи регулярных выражений. Список: 
['baveja@att.net', 'mhassel@comcast.net', 'heine@sbcglobal.net', 'gbacon@comcast.net', 'slaff@hotmail.com', 'seemant@yahoo.com', 'miltchev@verizon.net', 'ducasse@hotmail.com', 'chaikin@yahoo.ca', 'agolomsh@yahoo.ca', 'joehall@msn.com', 'ilikered@optonline.net']
Результат: ['@att', '@comcast', '@sbcglobal', '@comcast', '@hotmail', '@yahoo', '@verizon', '@hotmail', '@yahoo', '@yahoo', '@msn', '@optonline']
# 4: Написать функцию, которая при помощи методов строк извлекает дату из строки и сконвертировать эти данные в даты при помощи модуля datetime. . Дополнительно сделать это при помощи регулярных выражений. 
Строка: "Lorem ipsum dolor sit Amit 34-3456 12-06-2012 amet, consectetur adipiscing elit, sed do eiusmod tempor Amit 42-2216 31-06-2019 incididunt ut labore et dolore Amit 32-6782 03-12-2270 magna aliqua."
Результат: [2012-06-12, 2270-12-03] (list datetime objects)
Спойлер: одна дата неверная, это нужно учесть.
#5: Написать функцию, которая принимает строку в качестве аргумента и возвращает строку, в которой все строчные буквы заменены на заглавные и наоборот.
Пример: swap_case(‘Hello World’) >> ‘hELLO wORLD’
#6: Написать функцию, которая принимает строку в качестве аргумента и возвращает строку, в которой все пробелы заменены на дефис.
Пример: replace_spaces(‘Hello World’) >> ‘Hello-World’
#7: Написать функцию, которая принимает в качестве аргументов строку,
индекс, символ. Функция должна вернуть строку, в которой под указанным индексом будет заменен символ
Пример: replace_char(‘Hello World’, 1, ‘a’) >> ‘Hallo World’
#8: Написать функцию, которая принимает в качестве аргумента строку. Функция должна проверять и возвращать True, если переданная строка является палиндромом, в противном случае - False.
Пример: check_palindrome(‘Never odd or even’) >> True
#9: Написать функцию, которая принимает в качестве аргумента строку. Функция должна возвращать “перевернутую” строк.
Пример: reverse_string(‘never give up’) >> ‘up give never’
#10: Написать функцию, которая принимает в качестве аргумента строку и возвращает длину предпоследнего слова.
Пример: penultimate_len('In the end the winner is still the last man standing') >> 3’
#11: Написать функцию, которая принимает в качестве аргумента строку - римское число и возвращает целое число.
Пример: roman_to_int(‘XIV’) >> 14
# 12: Написать функцию, будет считать буквы переданной ей строки.
a = 'hello'
*порядок букв не обязателен.
Пример calculate_chars(a) >> 'h - 1, e - 1, l - 2, o - 1'

Задание на каникулы:
Написать программу, которая будет через терминал искать текст в файлах.
Принцип работы: вызывается при помощи исполняемого файла или установленного в систему пакета, в качестве аргументов принимает:
1. Текст, который нужно найти (обязательно)
2. Путь, по которому нужно искать (опциональный). Если путь отсутствует, искать нужно непосредственно относительно текущего положения в терминале.
Вывод: программа должна выводить: строку с совпадением, путь к файлу и номер строки. По умолчанию первые 100 совпадений.
Для работы с операционной системой: https://pythonworld.ru/moduli/modul-os.html
Для чтения аргументов командной строки: https://habr.com/ru/post/144416/
Работа с файлами: https://pythonworld.ru/tipy-dannyx-v-python/fajly-rabota-s-fajlami.html
*Инструкция по созданию пакетов: https://tehnojam.ru/category/development/sozdaem-svoj-paket-python.html
<<<<<<< HEAD
**При помощи флагов аргументов выводить все совпадения, если их больше ста; добавить возможность передавать не просто текст, а паттерны для поиска совпадений.
=======
**При помощи флагов аргументов выводить все совпадения, если их больше ста; добавить возможность передавать не просто текст, а паттерны для поиска совпадений.
>>>>>>> homework_05
