Материал на русском: https://developer.mozilla.org/ru/docs/Learn/Server-side/Django

A. В качестве домашнего задания необходимо у себя на компьюьере создать новый проект, установить django,
создать новый аппликейшен (команда startapp). В созданном приложении необходимо создать 2 модели:
1. Project, который содержит поля: название, краткое описание, дата создания.
2. Issue (задача), которая содержит связь с проектом (одна ишью связана только с одним проектом), название,
описание, дата создания, создателя (связь с пользователем, который создал задачу), исполнителя
(связь с пользователем, который исполняет эту задачу), дату и время до которого задача должна быть выполнена.

Нужно создать 2 группы:
1. Менеджеры (имеют доступ ко всему);
2. Разработчики (имеют доступ только к просмотру проектов и задач)

После создать миграции и применить их. Подключить их в палени администратора (admins.py).
Создать суперюзера (createsuperuser) и убедиться, что все на месте и отображается в админке.

------------------------------------------------------------------------------------------------------------------------

B. Гайд по орм: https://books.agiliq.com/projects/django-orm-cookbook/en/latest/

В качестве домашнего задания необходимо написать миграции для приложения,
которые добавят к существующим группам для менеджеров - все пермишены имеющиеся,
а для разработчиков - возможность просматривать проекты и ишьюс.
Далее необходимо создать csv файл, в котором будут содержаться произвольные данные для создания 10 менеджеров,
50 разработчиков, 2 проектов, 10 ишьюс (по 5 на каждый проект). После этого нужно создать миграцию,
которая будет вычитывать эти данные из csv файла и записывать эти значения в базу данных.

После потренировать запросы из гайда на ваших созданных данных. Делать это нужно обязательно через manage.py shell.

------------------------------------------------------------------------------------------------------------------------

C. Django - Представления

Материал по теме:
https://docs.djangoproject.com/en/3.0/topics/class-based-views/
https://docs.djangoproject.com/en/3.0/topics/http/views/

Задания на дом:
Необходимо добавить представления в ваш проект для Project и Issue:
1. создания - формы должна содержать также ссылку на список сущностей;
2. чтение(список/детальное представление) - список должен содержать пагинацию и ссылки на создание,
детальное представление и удаление сущности.
3. редактирования - страница должна содержать ссылку отмены, которая ведет на предыдущую страницу;
4. удаления.

На ваше усмотрение привести разметку страниц в порядок используя: https://getbootstrap.com/

Добавить менеджмент команду, которая экспортирует список пользователей на которых заасайнена Issue с вышедшим дедлайном.

------------------------------------------------------------------------------------------------------------------------

D. Django - Шаблоны

Метериал по теме:
Шаблоны - https://metanit.com/python/django/2.1.php
Документция джанго - https://docs.djangoproject.com/en/3.0/topics/templates/
Загрузка файлов - https://docs.djangoproject.com/en/3.0/topics/http/file-uploads/

Задания на дом:
Добавить м2м поле проекта, которое бы связывало пользователей и проекты.
Необходимо сделать отображение проектов на странице списка проектов для девелоперов только тех,
к которым он прикреплен.
Добавить новую таблицу, которая бы состояла из файл филда и форейн кия для проекта,
настроить загрузку файлов для ишшуес.

------------------------------------------------------------------------------------------------------------------------

E. Django формы

Материал по теме:
https://docs.djangoproject.com/en/3.0/topics/forms/

Задания на дом:
Необходимо добавить страницу регистрации новых пользователей (регистрация не требует никаких подтверждений).
Обязательные данные для регистрации пользователя (username, password, confirm_password, email, first_name, last_name).
По умолчанию создается роль пользователя 'Developer'.
Добавить страницу со списком пользователей, которая дсотупна только Manager'ам.
Все страницы, кроме страницы регистраии и логина должны требовать авторизации пользователя.
Форма создания issue должна иметь валидацию:
- дедлайн не может быть в прошлом;
- нельзя назначить в качестве assigne - manager'а.

------------------------------------------------------------------------------------------------------------------------

F. Django сериалайзер

Материал на русском:
https://github.com/ilyachch/django-rest-framework-rusdoc

Задания на дом:
Необходимо создать апи для создания/детального представления/изменения/удаления/ пользователей, проектов и ишьес.
Продублировать для них пермишены как и для обычных вью. Перенести валидацию в сериалайзер.
------------------------------------------------------------------------------------------------------------------------

G. Тесты

Тетирование в джанго: https://developer.mozilla.org/ru/docs/Learn/Server-side/Django/Testing

Задание на дом:
Необходимо покрыть тестами следующий функционал джанго приложения:
- авторизация;
- регистрация нового пользователя;
- создание/чтение/изменение/удаления проекта;
- создание/чтение/изменение/удаления ишьес;

------------------------------------------------------------------------------------------------------------------------

H. Docker

Цикл статей по докер: https://habr.com/ru/company/ruvds/blog/438796/
В качестве домашнего задания нужно поднять локально структуру из 3-х контейнеров для вашего приложения: 
база данных, веб сервер, контейнерс джанго

